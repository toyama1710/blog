<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ライブラリ on toyama1710 blog</title><link>https://blog.toyama1710.net/tags/%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA/</link><description>Recent content in ライブラリ on toyama1710 blog</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Thu, 09 Dec 2021 20:50:04 +0900</lastBuildDate><atom:link href="https://blog.toyama1710.net/tags/%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA/index.xml" rel="self" type="application/rss+xml"/><item><title>bit演算シリーズ</title><link>https://blog.toyama1710.net/posts/2021/12/09/bit_op/</link><pubDate>Thu, 09 Dec 2021 20:50:04 +0900</pubDate><guid>https://blog.toyama1710.net/posts/2021/12/09/bit_op/</guid><description>bit/clz.hpp, bit/ctz.hpp, bit/msb.hpp, bit/lsb.hpp, bit/pop_count.hpp のドキュメント ビルトイン関数を使えば良いです速いし それらが使えない処理系のための実装を提供するのと、__builtin_ctz(0</description></item><item><title>多次元のvector作るやつ</title><link>https://blog.toyama1710.net/posts/2021/12/07/make_vector/</link><pubDate>Tue, 07 Dec 2021 21:19:49 +0900</pubDate><guid>https://blog.toyama1710.net/posts/2021/12/07/make_vector/</guid><description>コード 概要 before: vector&amp;lt;vector&amp;lt;vector&amp;lt;T&amp;gt;&amp;gt;&amp;gt; vec = vector&amp;lt;vector&amp;lt;vector&amp;lt;T&amp;gt;&amp;gt;&amp;gt;(n1, vector&amp;lt;vector&amp;lt;T&amp;gt;&amp;gt;(n2, vector&amp;lt;T&amp;gt;(n3, e))); after: auto vec = make_vector({n1, n2, n3}, e); N次元vectorの宣言に$\Theta (N^2)$回もvectorって書きたくないので嬉しくなっ</description></item><item><title>RevCmp</title><link>https://blog.toyama1710.net/posts/2021/11/24/rev_cmp/</link><pubDate>Wed, 24 Nov 2021 23:04:30 +0900</pubDate><guid>https://blog.toyama1710.net/posts/2021/11/24/rev_cmp/</guid><description>RevCmpのドキュメント templateで受け取った型Tの比較順を逆にしてくれる Rustのstd::cmp::Reverseと同じもの Tは</description></item><item><title>永続weight-biased lefitst heap書いた</title><link>https://blog.toyama1710.net/posts/2021/11/24/persistent_leftist_heap/</link><pubDate>Wed, 24 Nov 2021 23:04:24 +0900</pubDate><guid>https://blog.toyama1710.net/posts/2021/11/24/persistent_leftist_heap/</guid><description>PersistentLeftistHeapのドキュメント LeftistHeapの永続化実装になってる インタフェース Self merge_with(Self h) hとマージしてできた</description></item><item><title>weight-biased leftist heap 書いた</title><link>https://blog.toyama1710.net/posts/2021/11/24/leftist_heap/</link><pubDate>Wed, 24 Nov 2021 23:03:39 +0900</pubDate><guid>https://blog.toyama1710.net/posts/2021/11/24/leftist_heap/</guid><description>LeftistHeap のドキュメント 最小ヒープになっていることと、C++のstd::priority_queueで言うところのtop()がpeek()になってい</description></item><item><title>AVL木書いた3</title><link>https://blog.toyama1710.net/posts/2021/09/14/avl3/</link><pubDate>Tue, 14 Sep 2021 13:15:41 +0900</pubDate><guid>https://blog.toyama1710.net/posts/2021/09/14/avl3/</guid><description>PersistentAVLSetのドキュメント AVLSetを継承してinsert/erase周りをオーバーライドして実装 insert/era</description></item><item><title>ModInt書いた</title><link>https://blog.toyama1710.net/posts/2021/09/13/modint/</link><pubDate>Mon, 13 Sep 2021 21:41:19 +0900</pubDate><guid>https://blog.toyama1710.net/posts/2021/09/13/modint/</guid><description>ModIntのドキュメント 書くこと、あるか？ ModInt&amp;lt;998244353&amp;gt; mi(1); ModInt&amp;lt;998244353&amp;gt; mi = 5; みたいにテンプレート引数で法を指定して使う 法が素数でない場合の挙動は未定義(多分除算</description></item><item><title>ダブリングでLCA求めるやつ(DoublingTree)</title><link>https://blog.toyama1710.net/posts/2021/09/08/doubling_tree/</link><pubDate>Wed, 08 Sep 2021 23:59:11 +0900</pubDate><guid>https://blog.toyama1710.net/posts/2021/09/08/doubling_tree/</guid><description>DoublingTreeのドキュメント LCAを求めたり木上の任意の2ノード間の距離を $\Theta(\log N)$ で計算したりできる doubling_tree.hpp</description></item><item><title>AVL木書いた2</title><link>https://blog.toyama1710.net/posts/2021/09/07/avl2/</link><pubDate>Tue, 07 Sep 2021 16:21:32 +0900</pubDate><guid>https://blog.toyama1710.net/posts/2021/09/07/avl2/</guid><description>AVLArrayのドキュメント AVL木で任意区間の切り貼り、区間反転、区間更新、区間積を $\Theta (\log N)$ でできるやつ書いた DynamicSequanc</description></item><item><title>AVL木書いた</title><link>https://blog.toyama1710.net/posts/2021/09/02/avl/</link><pubDate>Thu, 02 Sep 2021 02:49:09 +0900</pubDate><guid>https://blog.toyama1710.net/posts/2021/09/02/avl/</guid><description>AVLSet のドキュメント 外から叩くメソッド template引数 template引数Tが満たすべき要件は以下 operator &amp;lt; を実装していること 順序が正しく定義され</description></item><item><title>セグメント木</title><link>https://blog.toyama1710.net/posts/2020/12/21/segtree/</link><pubDate>Mon, 21 Dec 2020 02:07:22 +0900</pubDate><guid>https://blog.toyama1710.net/posts/2020/12/21/segtree/</guid><description>TODO: 書き切る 2次元セグ木以降は随時更新のつもり SegmentTree 空間: $O(N)$ (より正確にはちょうど $2N$) いわゆる普通のセグ木 1点更新/区間取得が $O(log N)$ Monoid template の Monoid が満たすべ</description></item></channel></rss>